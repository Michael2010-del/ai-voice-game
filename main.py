import sounddevice as sd
import numpy as np
import scipy.io.wavfile as wav
import speech_recognition as sr
from deep_translator import GoogleTranslator
import random 



words_by_level = {
    "easy": [
        "–∫–æ—Ç", "—Å–æ–±–∞–∫–∞", "–¥–æ–º", "—Å—Ç–æ–ª", "—Å—Ç—É–ª", 
        "–º—è—á", "–∫–Ω–∏–≥–∞", "—Ä—É–∫–∞", "–Ω–æ–≥–∞", "–≥–æ–ª–æ–≤–∞",
        "—Å–æ–ª–Ω—Ü–µ", "–ª—É–Ω–∞", "–∑–≤–µ–∑–¥–∞", "–≤–æ–¥–∞", "–æ–≥–æ–Ω—å",
        "–º–∞–º–∞", "–ø–∞–ø–∞", "—Å—ã–Ω", "–¥–æ—á—å", "–¥—Ä—É–≥",
        "—Ö–ª–µ–±", "–º–æ–ª–æ–∫–æ", "—Å–æ–∫", "—Å—ã—Ä", "—è–±–ª–æ–∫–æ",
        "–≥—Ä—É—à–∞", "–∫–æ—à–∫–∞", "–ø—Ç–∏—Ü–∞", "—Ä—ã–±–∞", "—Ü–≤–µ—Ç–æ–∫"
    ],
    "medium": [
        "—à–∫–æ–ª–∞", "—É—á–∏—Ç–µ–ª—å", "—É—á–µ–Ω–∏–∫", "—É—Ä–æ–∫", "—Ç–µ—Ç—Ä–∞–¥—å",
        "–∫–∞—Ä–∞–Ω–¥–∞—à", "—Ä—É—á–∫–∞", "–¥–æ—Å–∫–∞", "–∫–ª–∞—Å—Å", "–∑–Ω–∞–Ω–∏–µ",
        "–≥–æ—Ä–æ–¥", "—É–ª–∏—Ü–∞", "–ø–∞—Ä–∫", "–º–∞–≥–∞–∑–∏–Ω", "–±–∏–±–ª–∏–æ—Ç–µ–∫–∞",
        "—Ä–∞–±–æ—Ç–∞", "–¥–æ–∫—Ç–æ—Ä", "–∏–Ω–∂–µ–Ω–µ—Ä", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç", "—Ö—É–¥–æ–∂–Ω–∏–∫",
        "–≤—Ä–µ–º—è", "—á–∞—Å", "–º–∏–Ω—É—Ç–∞", "–Ω–µ–¥–µ–ª—è", "–º–µ—Å—è—Ü",
        "–≥–æ–¥", "–ø–æ–≥–æ–¥–∞", "–¥–æ–∂–¥—å", "—Å–Ω–µ–≥", "–≤–µ—Ç–µ—Ä"
    ],
    "hard": [
        "—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç", "–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–∫–æ–º–ø—å—é—Ç–µ—Ä",
        "–ø—Ä–æ–≥—Ä–∞–º–º–∞", "–∞–ª–≥–æ—Ä–∏—Ç–º", "–∏–Ω—Ç–µ—Ä–Ω–µ—Ç", "—Å–æ–æ–±—â–µ—Å—Ç–≤–æ", "–ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ",
        "–∏—Å–∫—É—Å—Å—Ç–≤–æ", "–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–º—É–∑—ã–∫–∞", "—Ç–µ–∞—Ç—Ä", "–∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ",
        "–º–µ–¥–∏—Ü–∏–Ω–∞", "–±–∏–æ–ª–æ–≥–∏—è", "—Ö–∏–º–∏—è", "—Ñ–∏–∑–∏–∫–∞", "–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
        "—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è", "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è", "—ç–∫–æ–Ω–æ–º–∏–∫–∞", "–ø–æ–ª–∏—Ç–∏–∫–∞", "–∏—Å—Ç–æ—Ä–∏—è",
        "–≥–µ–æ–≥—Ä–∞—Ñ–∏—è", "–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", "–∏–Ω–∂–µ–Ω–µ—Ä–∏—è", "–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ", "—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç"
    ]
}

duration = 3  # —Å–µ–∫—É–Ω–¥—ã –∑–∞–ø–∏—Å–∏
sample_rate = 44100

print("üéÆ" * 30)
print("üéØ–ì–æ–≤–æ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æüéØ")
print("üéÆ" * 30)
print("üìú–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:")
print("–¢–µ–±–µ –ø–æ–∫–∞–∂—É—Ç —Å–ª–æ–≤–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º")
print("–¢—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º")
print("–£ —Ç–µ–±—è –µ—Å—Ç—å 3 –∂–∏–∑–Ω–∏")
print("–ó–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç +10 –æ—á–∫–æ–≤")
print("3 –æ—à–∏–±–∫–∏ - –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞")
print("üéØ–ì–æ—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è? –ü–æ–µ—Ö–∞–ª–∏!")
print("üéÆ" * 30)

# –ì–ª–∞–≤–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
while True:
    # –°–±—Ä–æ—Å –∏–≥—Ä—ã
    score = 0
    lives = 3
    level = ""
    
    print("\n" + "=" * 50)
    print("üéÆ –ù–û–í–ê–Ø –ò–ì–†–ê!")
    print("=" * 50)
    
    # –í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å:")
    print("1. Easy")
    print("2. Medium")
    print("3. Hard")
    print("4. –í—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã")
    
    choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ")
    
    if choice == "4":
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        break
    
    if choice == "1":
        level = "easy"
        print("‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –ª–µ–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å")
    elif choice == "2":
        level = "medium"
        print("‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å")
    elif choice == "3":
        level = "hard"
        print("‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å")
    else:
        print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–µ–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å")
        level = "easy"
    
    # –ò–≥—Ä–æ–≤–æ–π —Ä–∞—É–Ω–¥
    while lives > 0:
        print(f"\n‚ù§Ô∏è –ñ–∏–∑–Ω–∏: {lives} | üíØ –û—á–∫–∏: {score}")
        print("-" * 40)
        
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ
        russian_word = random.choice(words_by_level[level])
        print(f"üìù –°–∫–∞–∂–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º: {russian_word}")
        
        print("üé§ –ì–æ–≤–æ—Ä–∏... (–∑–∞–ø–∏—Å—å 3 —Å–µ–∫—É–Ω–¥—ã)")
        
        # –ó–∞–ø–∏—Å—å –∞—É–¥–∏–æ
        try:
            recording = sd.rec(
                int(duration * sample_rate),
                samplerate=sample_rate,
                channels=1,
                dtype="int16"
            )
            sd.wait()
            
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
            wav.write("output.wav", sample_rate, recording)
            
            recognizer = sr.Recognizer()
            with sr.AudioFile("output.wav") as source:
                audio = recognizer.record(source)
            
            try:
                english_text = recognizer.recognize_google(audio, language="en-US")
                print(f"üé§ –¢—ã —Å–∫–∞–∑–∞–ª: {english_text}")
                
                # –ü–µ—Ä–µ–≤–æ–¥ –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                try:
                    translated_back = GoogleTranslator(source="auto", target="ru").translate(english_text)
                    print(f"üåç –û–±—Ä–∞—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥: {translated_back}")
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏
                    if translated_back.lower() == russian_word.lower():
                        score += 10
                        print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! +10 –æ—á–∫–æ–≤!")
                        print("üéâ –û—Ç–ª–∏—á–Ω–æ! –°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ...")
                    else:
                        lives -= 1
                        print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {russian_word}")
                        print(f"üíî –û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: {lives}")
                        
                except Exception as e:
                    lives -= 1
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞! –û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: {lives}")
                    
            except sr.UnknownValueError:
                lives -= 1
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å! –û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: {lives}")
            except sr.RequestError as e:
                lives -= 1
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è! –û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: {lives}")
                
        except Exception as e:
            lives -= 1
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –∑–≤—É–∫–∞! –û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: {lives}")
    
    # –ö–æ–Ω–µ—Ü —Ä–∞—É–Ω–¥–∞
    print("\n" + "üéÆ" * 30)
    print("üéØ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!")
    print(f"üíØ –í–∞—à —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—á–µ—Ç: {score} –æ—á–∫–æ–≤")
    print("üéÆ" * 30)
    
    if score >= 30:
        print("üèÜ –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í—ã –º–æ–ª–æ–¥–µ—Ü!")
    elif score >= 10:
        print("üëç –•–æ—Ä–æ—à–∞—è –ø–æ–ø—ã—Ç–∫–∞! –ú–æ–∂–µ—Ç–µ –ª—É—á—à–µ!")
    else:
        print("üëé –ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")
    
    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å—ã–≥—Ä–∞—Ç—å again
    print("\n–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?")
    play_again = input("–í–≤–µ–¥–∏—Ç–µ '–¥–∞' –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–ª–∏ '–Ω–µ—Ç' –¥–ª—è –≤—ã—Ö–æ–¥–∞: ")
    
    if play_again.lower() != '–¥–∞':
        print("üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        break

print("\n–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
